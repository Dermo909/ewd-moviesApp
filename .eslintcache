[{"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\index.js":"1","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\homePage.js":"2","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieList\\index.js":"3","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovieList\\index.js":"4","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\filterMoviesCard\\index.js":"5","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieCard\\index.js":"6","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieDetailsPage.js":"7","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovie\\index.js":"8","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieDetails\\index.js":"9","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\favoriteMoviesPage.js":"10","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMovieListPage\\index.js":"11","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\tmdb-api.js":"12","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMoviePage\\index.js":"13","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReviews\\index.js":"14","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\utils.js":"15","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieReviewPage.js":"16","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReview\\index.js":"17","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\hooks\\useMovie.js":"18","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\siteHeader\\index.js":"19","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\upcomingMoviesPage.js":"20","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\moviesContexts.js":"21","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\genresContexts.js":"22","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToFavorites.js":"23","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\writeReview.js":"24","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromFavorites.js":"25","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\addMovieReviewPage.js":"26","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\reviewForm\\index.js":"27","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToPlaylist.js":"28","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\watchlistMoviesPage.js":"29","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromWatchlist.js":"30","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\top100MoviesPage.js":"31","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\top100MovieList\\index.js":"32","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieOrderedList\\index.js":"33","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\login.js":"34","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\login\\index.js":"35","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\authContext.js":"36","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\movie-api.js":"37","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\SignUp\\index.js":"38","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\unathorised.js":"39"},{"size":2381,"mtime":1621165151291,"results":"40","hashOfConfig":"41"},{"size":853,"mtime":1621164945612,"results":"42","hashOfConfig":"41"},{"size":385,"mtime":1616082951409,"results":"43","hashOfConfig":"41"},{"size":1215,"mtime":1615620714828,"results":"44","hashOfConfig":"41"},{"size":3187,"mtime":1616309890083,"results":"45","hashOfConfig":"41"},{"size":3319,"mtime":1620587478822,"results":"46","hashOfConfig":"41"},{"size":1304,"mtime":1621164952229,"results":"47","hashOfConfig":"41"},{"size":2004,"mtime":1617825255023,"results":"48","hashOfConfig":"41"},{"size":8156,"mtime":1620674745348,"results":"49","hashOfConfig":"41"},{"size":1239,"mtime":1621164778945,"results":"50","hashOfConfig":"41"},{"size":1780,"mtime":1620852450071,"results":"51","hashOfConfig":"41"},{"size":6726,"mtime":1620330552851,"results":"52","hashOfConfig":"41"},{"size":1869,"mtime":1620675581522,"results":"53","hashOfConfig":"41"},{"size":2471,"mtime":1619897967919,"results":"54","hashOfConfig":"41"},{"size":714,"mtime":1620589392752,"results":"55","hashOfConfig":"41"},{"size":694,"mtime":1621164957180,"results":"56","hashOfConfig":"41"},{"size":209,"mtime":1615619703620,"results":"57","hashOfConfig":"41"},{"size":2634,"mtime":1620847032427,"results":"58","hashOfConfig":"41"},{"size":3566,"mtime":1621164693700,"results":"59","hashOfConfig":"41"},{"size":827,"mtime":1621164980803,"results":"60","hashOfConfig":"41"},{"size":6325,"mtime":1621022245992,"results":"61","hashOfConfig":"41"},{"size":667,"mtime":1616082158981,"results":"62","hashOfConfig":"41"},{"size":1154,"mtime":1620847308478,"results":"63","hashOfConfig":"41"},{"size":439,"mtime":1616084063373,"results":"64","hashOfConfig":"41"},{"size":1190,"mtime":1617824520621,"results":"65","hashOfConfig":"41"},{"size":1069,"mtime":1621164931718,"results":"66","hashOfConfig":"41"},{"size":5757,"mtime":1619897579026,"results":"67","hashOfConfig":"41"},{"size":1161,"mtime":1620850543179,"results":"68","hashOfConfig":"41"},{"size":1134,"mtime":1621163231048,"results":"69","hashOfConfig":"41"},{"size":1181,"mtime":1617824654753,"results":"70","hashOfConfig":"41"},{"size":873,"mtime":1621165046156,"results":"71","hashOfConfig":"41"},{"size":504,"mtime":1616315607304,"results":"72","hashOfConfig":"41"},{"size":317,"mtime":1617135125470,"results":"73","hashOfConfig":"41"},{"size":287,"mtime":1618948190193,"results":"74","hashOfConfig":"41"},{"size":3723,"mtime":1621162363013,"results":"75","hashOfConfig":"41"},{"size":1488,"mtime":1621162434046,"results":"76","hashOfConfig":"41"},{"size":3630,"mtime":1621162107305,"results":"77","hashOfConfig":"41"},{"size":3917,"mtime":1620330552852,"results":"78","hashOfConfig":"41"},{"size":310,"mtime":1621163249632,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6r8y7v",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\index.js",["169"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\homePage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieList\\index.js",[],["170","171"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovieList\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\filterMoviesCard\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieCard\\index.js",["172","173","174","175","176","177"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  card: { maxWidth: 250 },\r\n  media: { height: 400 },\r\n  avatar: {\r\n    backgroundColor: \"rgb(255, 0, 0)\",\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ movie, action }) {\r\n  const classes = useStyles();\r\n  console.log('movieCard');\r\n  return (\r\n\r\n    <Card className={classes.card}>\r\n      {/* <CardHeader\r\n        className={classes.header}\r\n        avatar={\r\n          movie.favorite ? (\r\n            <Avatar className={classes.avatar}>\r\n              <FavoriteIcon />\r\n            </Avatar>\r\n          ) : movie.playlist ? (\r\n            <Avatar className={classes.avatar}>\r\n              <PlaylistAddCheckIcon />\r\n            </Avatar>\r\n          ) : null\r\n        }\r\n        title={\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            {movie.title}{\" \"}\r\n          </Typography>\r\n        }\r\n      /> */}\r\n      <Link to={`/movies/${movie._id}`}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={\r\n          movie.poster_path !== 'null'\r\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      </Link>\r\n      <CardContent>\r\n        <Grid container>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"h6\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {movie.title}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h6\">\r\n              <Box fontWeight=\"fontWeightMedium\" fontSize={14}>\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {movie.release_date}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"h6\">\r\n            <Box fontWeight=\"fontWeightMedium\" fontSize={14}>\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {movie.vote_average}{\" \"}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* <CardActions disableSpacing>\r\n        {action(movie)}\r\n\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieDetailsPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovie\\index.js",["178"],"import React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(1.5),\r\n    margin: 0,\r\n  },\r\n  // tagLine: {\r\n  //   fontSize: \"1.5rem\",\r\n  // },\r\n  movieDetails: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  movieHeader_Name: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: \"fontWeightBold\",\r\n  },\r\n  movieHeader_Year: {\r\n    fontSize: \"1.5rem\",\r\n    color: \"grey\"\r\n  },\r\n}));\r\n\r\nconst MovieHeader = ( { movie, history}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"div\" className={classes.root}>\r\n      <IconButton aria-label=\"go back\" onClick={() => history.goBack()} >\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        <span className={classes.movieHeader_Name}>{movie.title}</span> \r\n        <span className={classes.movieHeader_Year}>({movie.releaseYear})</span>\r\n        <br />\r\n        <span className={classes.movieDetails}>Rated {movie.certification} ○ {movie.release_date} ○ {movie.runtime} ○ {movie.productionCountry}</span>\r\n        {/*<a href={movie.homepage}></a>\r\n         <br />\r\n        <span className={classes.tagLine}>{`   \"${movie.tagline}\"`} </span> */}\r\n      </Typography>\r\n      <IconButton aria-label=\"go forward\" onClick={() => history.goForward() } >\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieHeader);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieDetails\\index.js",["179","180","181","182"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StarRate from \"@material-ui/icons/StarRate\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MovieReviews from \"../movieReviews\"\r\nimport Box from '@material-ui/core/Box';\r\nimport { excerpt } from \"../../../src/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport AddToFavoritesIcon from '../cardIcons/addToFavorites';\r\nimport AddToPlaylistIcon from '../cardIcons/addToPlaylist';\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport WriteReview from \"../cardIcons/writeReview\";\r\n\r\nconst theme = {\r\n  spacing: 8,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    //justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(1.5),\r\n    margin: 0,\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  genreList: {\r\n    display: \"inline\"\r\n  },\r\n  tagline: {\r\n    fontStyle: \"oblique\"\r\n  },\r\n  crewTitle: {\r\n    fontWeight: \"fontWeightBold\",\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\"\r\n  },\r\n  crewName: {\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\",\r\n    color: \"grey\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    maxWidth: \"100%\"\r\n  },\r\n  actorDetails: {\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\",\r\n\r\n    margin: \"10px\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  actorName: {\r\n    fontWeight: \"fontWeightBold\",\r\n  },\r\n  characterName: {\r\n    fontSize: \".75rem\",\r\n    color: \"grey\",\r\n  },\r\n  imgSize: {\r\n    height: \"75px\",\r\n    borderRadius: \"16px\"\r\n  },\r\n  reviewAuthor: {\r\n    fontWeight: \"fontWeightBold\"\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n    height: \"250px\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\nfunction ShowFavoriteIcon(props) {\r\n  console.log('props: ', props);\r\n  const isFavorite = props.favorite;\r\n\r\n  if (isFavorite) {\r\n    console.log('Is favorite');\r\n    return <FavoriteIcon />;\r\n  } else {\r\n    console.log('Is not favorite');\r\n    return <AddToFavoritesIcon movie={props}/>;\r\n  }\r\n}\r\n\r\n\r\nconst MovieDetails = ({ movie, action }) => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  console.log('movie details: ', movie);\r\n  const toggleDrawer = (open) => {\r\n    return () => setDrawerOpen(open);\r\n  };\r\n\r\n  const favIcon = ShowFavoriteIcon(movie);\r\n\r\n  // Just show actors with images\r\n  const actors = movie.castAndCrew.sortedActors.filter(x => x.file_path !== undefined);\r\n\r\n  const handleGenreClick = () => {\r\n    console.info('You clicked the Chip.');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n      <Typography variant=\"h6\" component=\"span\">\r\n          {(() => {\r\n            if (movie.userRating !== null) {\r\n              return <Chip icon={<StarRate />} label={`${movie.userRating}`}     style={{\r\n\r\n                backgroundColor: \"#32a852\"\r\n\r\n            }}/>;\r\n            } else {\r\n              return <Chip icon={<StarRate />} label={`${movie.vote_average}`} />;\r\n            }\r\n          })()}\r\n        \r\n        {movie.genres.map((g) => (\r\n          <Chip key={g.id} label={g.name} className={classes.chip} onClick={handleGenreClick}/>\r\n        ))}\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          {/* {favIcon } */}\r\n          <AddToFavoritesIcon movie={movie}/>\r\n          <AddToPlaylistIcon movie={movie}/>\r\n          <Box>\r\n            {(() => {\r\n              if (movie.userRating === null) {\r\n                return <WriteReview movie={movie} />;\r\n              }\r\n            })()}\r\n          </Box>\r\n          \r\n        </Box>\r\n        <br />\r\n        <Box className={classes.tagline}>\r\n          {movie.tagline}\r\n        </Box>\r\n        <br />\r\n        <Box>\r\n          {movie.overview}\r\n        </Box>\r\n        <br />\r\n\r\n        <Box className={classes.container}>\r\n          <Box className={classes.crewTitle}>Director<br /><span className={classes.crewName}>{movie.castAndCrew.director.name}</span></Box>\r\n          <Box className={classes.crewTitle}>Producer <br /><span className={classes.crewName}>{movie.castAndCrew.producer.name}</span></Box>\r\n          <Box className={classes.crewTitle}>Writer <br /><span className={classes.crewName}>{movie.castAndCrew.writer.name}</span></Box>\r\n        </Box>\r\n       </Typography>\r\n       </Box>\r\n        <br />\r\n        <Box className={classes.container}>\r\n        <br />\r\n        <GridList className={classes.gridList} cols={9}>\r\n        {movie.castAndCrew.sortedActors.map((actor) => (\r\n          <GridListTile key={actor.original_name}>\r\n            <a href={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}>\r\n            <img src={`https://image.tmdb.org/t/p/w154/${actor.profile_path}`} alt={actor.profile_path} />\r\n            </a>\r\n            <GridListTileBar\r\n              title={actor.original_name}\r\n              classes={{\r\n                root: classes.titleBar,\r\n              }}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n\r\n        {/* {movie.castAndCrew.sortedActors.map((a) => ( \r\n          <Paper key={a.original_name} className={classes.actorDetails}>\r\n            <img classes={classes.imgSize} src={`https://image.tmdb.org/t/p/w92/${a.profile_path}`} alt={a.profile_path} />\r\n            <br />\r\n            <span classes={classes.actorName}>{a.original_name}</span><br />\r\n            <span classes={classes.characterName}>{a.character}</span>\r\n          </Paper>))} */}\r\n        </Box>\r\n      <Box>\r\n        <Paper>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <Box display=\"flex\" flexDirection=\"column\" m={2}>\r\n              <img src={movie.topReview.author_details.avatar_path} alt={movie.topReview.author_details.avatar_path} />\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"column\" m={2}>\r\n                <Box component=\"span\" m={1} display=\"block\" classes={classes.reviewAuthor}>A review by {movie.topReview.author}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\" classes={classes.reviewAuthor}>Review written {movie.topReview.created_at}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">{excerpt(movie.topReview.content)}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">{movie.topReview.rating}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/reviews/${movie.topReview.id}`,\r\n                      state: {\r\n                        review: movie.topReview,\r\n                        movie: movie,\r\n                      },\r\n                    }}\r\n                    >\r\n                    Full Review\r\n                  </Link>\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box>\r\n      <Fab\r\n        color=\"secondary\"\r\n        variant=\"extended\"\r\n        onClick={toggleDrawer(true)}\r\n        className={classes.fab}\r\n      >\r\n        <NavigationIcon />\r\n        All Reviews\r\n      </Fab>\r\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={toggleDrawer(false)}>\r\n        <MovieReviews movie={movie} />\r\n      </Drawer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default  MovieDetails ;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\favoriteMoviesPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMovieListPage\\index.js",["183","184"],"import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieList from \"../movieList\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n  },\r\n});\r\n\r\nfunction MovieListPageTemplate({ movies, title, action }) {\r\n  const classes = useStyles();\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const genre = Number(genreFilter);\r\n\r\n  console.log('templatemovielistpage: movies', movies);\r\n  let displayedMovies = movies\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\r\n    });\r\n    console.log('displayedMovies in template movie list page: ', displayedMovies);\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n      <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        {/* <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n          />\r\n        </Grid> */}\r\n        {/* <MovieList selectFavorite={selectFavorite} movies={displayedMovies}></MovieList> */}\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default MovieListPageTemplate;\r\n","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\tmdb-api.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMoviePage\\index.js",["185"],"import React, { useState, useEffect } from \"react\";\r\nimport MovieHeader from \"../headerMovie\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport { getMovieImages } from \"../../api/tmdb-api\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  gridList: {\r\n    width: 450,\r\n    height: '100vh',\r\n  },\r\n}));\r\n\r\nconst TemplateMoviePage = ({ movie, children }) => {\r\n  const classes = useStyles();\r\n  const [images, setImages] = useState([]);\r\n  useEffect(() => {\r\n    getMovieImages(movie.id).then((images) => {\r\n      movie.mainPoster = images.length !== 0 ? images[0].file_path : movie.backdrop_path;\r\n      console.log(images);\r\n      setImages(images);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MovieHeader movie={movie} />\r\n\r\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\r\n        <Grid item xs={3}>\r\n          <div className={classes.root}>\r\n            <GridList cellHeight={900} className={classes.gridList} cols={1}>\r\n                <GridListTile key={movie.mainPoster} className={classes.gridListTile} cols={1}>\r\n                  <Box>\r\n                  <img \r\n                    src={`https://image.tmdb.org/t/p/w500/${movie.mainPoster}`}\r\n                    alt={movie.mainPoster}\r\n                  />\r\n                  </Box>\r\n                </GridListTile>\r\n            </GridList>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateMoviePage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReviews\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\utils.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieReviewPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReview\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\hooks\\useMovie.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\siteHeader\\index.js",["186"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\upcomingMoviesPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\moviesContexts.js",["187","188","189"],"import React, { useReducer, useEffect, useState, useContext } from \"react\";\r\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\r\nimport {  getMovies,\r\n          addMovieToFavourites,\r\n          addMovieToWatchlist,\r\n          getUserFavourites,\r\n          getUserWatchlist } from \"../api/movie-api\";\r\nimport { convertReleaseDateToString, convertToPercentage } from '../utils';\r\nimport { AuthContext } from './authContext';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"load-favourite-movies\":\r\n      return {\r\n        favouriteMovies: action.payload.favouritesResult,\r\n        upcoming: [...state.upcoming],\r\n        movies: [...state.movies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"remove-favorite\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, favorite: false } : m\r\n        ),\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-watchlist-movies\":\r\n      return {\r\n        watchlistMovies: action.payload.watchlistResult.map(m => { m.watchlist = true; return m;}),\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        upcoming: [...state.upcoming],\r\n        movies: [...state.movies],\r\n      };\r\n    case \"remove-from-playlist\":\r\n      return {\r\n        upcoming: state.upcoming.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, playlist: false } : m\r\n        ),\r\n        favouriteMovies: action.payload.favouritesResult,\r\n        movies: [...state.movies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-discover-movies\":\r\n      console.log('case load-discover-movies ', action.payload);\r\n      return {\r\n        movies: action.payload.movies,\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-upcoming-movies\":\r\n      return {\r\n        upcoming: action.payload.movies,\r\n        movies: [...state.movies],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"add-review\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id\r\n            ? { ...m, review: action.payload.review }\r\n            : m\r\n        ),\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const MoviesContext = React.createContext(null);\r\n\r\nconst MoviesContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], upcoming: [], favouriteMovies: [], watchlistMovies: [] });\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  console.log('auth: ', auth);\r\n  \r\n  const addToFavorites = (movieId) => {\r\n    console.log('Add to favorite: ', movieId);\r\n\r\n    async function addToFavourites() {\r\n      const result = await addMovieToFavourites(auth.userName, movieId);\r\n      console.log('addToFavourites result: ', result);\r\n    }\r\n    addToFavourites();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getFavourites() {\r\n      const favouritesResult = await getUserFavourites(auth.userName);\r\n      console.log('useEffect getUserFavourites result: ', favouritesResult);\r\n\r\n      dispatch({ type: \"load-favourite-movies\", payload: { favouritesResult } });\r\n    }\r\n    getFavourites();\r\n  }, []);\r\n\r\n  const addToPlaylist = (movieId) => {\r\n    console.log('Add to watchlist: ', movieId);\r\n\r\n    async function addToWatchlist() {\r\n      const result = await addMovieToWatchlist(auth.userName, movieId);\r\n      console.log('addToFavourites result: ', result);\r\n    }\r\n    addToWatchlist();\r\n  };\r\n\r\n  const removeFromPlaylist = (movieId) => {\r\n    const index = state.upcoming.map((m) => m.id).indexOf(movieId);\r\n    console.log('removeFromPlaylist() index', index);\r\n    dispatch({\r\n      type: \"remove-from-playlist\",\r\n      payload: { movie: state.upcoming[index] },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getWatchlist() {\r\n      const watchlistResult = await getUserWatchlist(auth.userName);\r\n      console.log('useEffect getUserWatchlist result: ', watchlistResult);\r\n\r\n      dispatch({ type: \"load-watchlist-movies\", payload: { watchlistResult } });\r\n    }\r\n    getWatchlist();\r\n  }, []);\r\n\r\n  const removeFromFavorites = (movieId) => {\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({\r\n      type: \"remove-favorite\",\r\n      payload: { movie: state.movies[index] },\r\n    });\r\n  };\r\n\r\n  const addReview = (movie, review) => {\r\n    dispatch({ type: \"add-review\", payload: { movie, review } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      const moviesResult = await getMovies();\r\n      console.log('useEffect getMovies result: ', moviesResult);\r\n\r\n      moviesResult.results.forEach(x => {\r\n        x.vote_average = convertToPercentage(x.vote_average);\r\n        x.release_date = convertReleaseDateToString(x.release_date);\r\n      });\r\n\r\n      const movies = moviesResult.results;\r\n      dispatch({ type: \"load-discover-movies\", payload: { movies } });\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMovies().then((movies) => {\r\n      console.log('useEffect getUpcomingMovies result: ', movies);\r\n      dispatch({ type: \"load-upcoming-movies\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        upcoming: state.upcoming,\r\n        favouriteMovies: state.favouriteMovies,\r\n        watchlistMovies: state.watchlistMovies,\r\n        addToFavorites: addToFavorites,\r\n        removeFromFavorites: removeFromFavorites,\r\n        addReview: addReview,\r\n        addToPlaylist: addToPlaylist,\r\n        removeFromPlaylist: removeFromPlaylist,\r\n        setAuthenticated\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\genresContexts.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToFavorites.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\writeReview.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromFavorites.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\addMovieReviewPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\reviewForm\\index.js",["190"],"import React, { useContext, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useForm from \"react-hook-form\";\r\nimport { MoviesContext } from \"../../contexts/moviesContexts\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\"; \r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { convertUserRatingToPercentage } from '../../utils';\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    \"& > * \": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  textField: {\r\n    width: \"40ch\",\r\n  },\r\n  submit: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  snack: {\r\n     width: \"50%\",\r\n     \"& > * \": {\r\n       width: \"100%\",\r\n     },\r\n   },\r\n}));\r\n\r\nconst ReviewForm = ({ movie, history }) => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const context = useContext(MoviesContext);\r\n  const [rating, setRating] = useState(3);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const isLoggedIn = localStorage.getItem('LoggedIn');\r\n  const userName = localStorage.getItem('UserName');\r\n\r\n  const renderPage = () => {\r\n    if (isLoggedIn === 'true') {\r\n      return (\r\n        <Box component=\"div\" className={classes.root}>\r\n          <Typography component=\"h2\" variant=\"h3\">\r\n            Write a review\r\n          </Typography>\r\n    \r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleSnackClose}>\r\n            <Alert onClose={handleSnackClose} severity=\"success\">\r\n            Thank you for submitting a review!\r\n            </Alert>\r\n          </Snackbar>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            noValidate\r\n          >\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              id=\"author\"\r\n              label=\"Author's name\"\r\n              name=\"author\"\r\n              autoFocus\r\n              inputRef={register({ required: \"Author name required\" })}\r\n              value={userName}\r\n            />\r\n            {errors.author && (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {errors.author.message}\r\n              </Typography>\r\n            )}\r\n    \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"content\"\r\n              label=\"Review text\"\r\n              id=\"content\"\r\n              multiline\r\n              rows={10}\r\n              inputRef={register({\r\n                required: \"No review text\",\r\n                minLength: { value: 10, message: \"Review is too short\" },\r\n              })}\r\n            />\r\n            {errors.content && (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {errors.content.message}\r\n              </Typography>\r\n            )}\r\n            <TextField\r\n              id=\"select-rating\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Rating Select\"\r\n              value={rating}\r\n              onChange={handleRatingChange}\r\n              helperText=\"Don't forget your rating\"\r\n            >\r\n              {ratings.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n    \r\n            <Box className={classes.buttons}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"reset\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                onClick={() => {\r\n                  reset({\r\n                    author: \"\",\r\n                    content: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      );\r\n    } else {\r\n      return <h1>You need to be logged in to access this page</h1>;\r\n    }\r\n  }\r\n  const handleSnackClose = (event) => {\r\n    setOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie.id;\r\n    review.rating = rating;\r\n\r\n    // Saving to local storage to display users rating on movie also\r\n    localStorage.setItem(`UserRating${movie.id}`, convertUserRatingToPercentage(rating));\r\n    localStorage.setItem(`Review${movie.id}`, review.content);\r\n    context.addReview(movie, review);\r\n    setOpen(true);   // NEW\r\n  };\r\n  return (\r\n    <div>\r\n      {renderPage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ReviewForm);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToPlaylist.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\watchlistMoviesPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromWatchlist.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\top100MoviesPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\top100MovieList\\index.js",["191","192","193","194"],"import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieList from \"../movieOrderedList\";\r\n\r\nfunction Top100MoviesPageTemplate({ movies, title }) {\r\n  return (\r\n    <div>\r\n        <Header title={title} />\r\n        <MovieList movies={movies}></MovieList>\r\n    </div>\r\n  );\r\n}\r\nexport default Top100MoviesPageTemplate;\r\n","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieOrderedList\\index.js",["195","196"],"import React from \"react\";\r\nimport Movie from \"../movieCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst MovieOrderedList = ({ movies }) => {\r\n  let moviesList = movies.map((m) => (\r\n    <li key={m.title}>{m.title} - {m.vote_average}</li>\r\n  ));\r\n  return moviesList;\r\n};\r\n\r\nexport default MovieOrderedList;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\login.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\login\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\authContext.js",["197"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\movie-api.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\SignUp\\index.js",["198"],"import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from './../../contexts/authContext';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useForm from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        \"& > * \": {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    textField: {\r\n        width: \"40ch\",\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    snack: {\r\n        width: \"50%\",\r\n        \"& > * \": {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst SignUpPage = props => {\r\n  const context = useContext(AuthContext)\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\r\n  const [registered, setRegistered] = useState(false);\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = () => {\r\n    if (password.length > 0 && password === passwordAgain) {\r\n        console.log('Calling register');\r\n      context.register(userName, password);\r\n      setRegistered(true);\r\n    }\r\n  }\r\n\r\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\r\n\r\n  if (registered === true) {\r\n    return <Redirect to={from} />;\r\n  }\r\n\r\n  return (\r\n    <Box component=\"div\" className={classes.root}>\r\n    <Typography component=\"h2\" variant=\"h3\">\r\n      Please enter your details\r\n    </Typography>\r\n\r\n    <form\r\n      className={classes.root}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      noValidate\r\n    >\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"user name\"\r\n        name=\"name\"\r\n        autoFocus\r\n        inputRef={register({ required: \"User name required\" })}\r\n        onBlur={e => {setUserName(e.target.value)}}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        autoFocus\r\n        inputRef={register({ required: \"Password required\" })}\r\n        onBlur={e => {setPassword(e.target.value)}}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"password\"\r\n        name=\"passwordAgain\"\r\n        type=\"password\"\r\n        autoFocus\r\n        inputRef={register({ required: \"Confirm password required\" })}\r\n        onBlur={e => {setPasswordAgain(e.target.value)}}\r\n      />\r\n      {errors.name && (\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          {errors.name.message}\r\n        </Typography>\r\n      )}\r\n      <Box className={classes.buttons}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          type=\"reset\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.submit}\r\n          onClick={() => {\r\n            reset({\r\n              userName: \"\", password: \"\"\r\n            });\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\unathorised.js",[],{"ruleId":"199","severity":1,"message":"200","line":18,"column":8,"nodeType":"201","messageId":"202","endLine":18,"endColumn":19},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"199","severity":1,"message":"207","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":19},{"ruleId":"199","severity":1,"message":"208","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":18},{"ruleId":"199","severity":1,"message":"209","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":14},{"ruleId":"199","severity":1,"message":"210","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":20},{"ruleId":"199","severity":1,"message":"211","line":16,"column":8,"nodeType":"201","messageId":"202","endLine":16,"endColumn":14},{"ruleId":"199","severity":1,"message":"212","line":17,"column":8,"nodeType":"201","messageId":"202","endLine":17,"endColumn":28},{"ruleId":"199","severity":1,"message":"213","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":16},{"ruleId":"199","severity":1,"message":"211","line":21,"column":8,"nodeType":"201","messageId":"202","endLine":21,"endColumn":14},{"ruleId":"199","severity":1,"message":"214","line":24,"column":7,"nodeType":"201","messageId":"202","endLine":24,"endColumn":12},{"ruleId":"199","severity":1,"message":"215","line":123,"column":9,"nodeType":"201","messageId":"202","endLine":123,"endColumn":16},{"ruleId":"199","severity":1,"message":"216","line":126,"column":9,"nodeType":"201","messageId":"202","endLine":126,"endColumn":15},{"ruleId":"199","severity":1,"message":"217","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":18},{"ruleId":"199","severity":1,"message":"218","line":29,"column":9,"nodeType":"201","messageId":"202","endLine":29,"endColumn":21},{"ruleId":"199","severity":1,"message":"219","line":24,"column":10,"nodeType":"201","messageId":"202","endLine":24,"endColumn":16},{"ruleId":"199","severity":1,"message":"220","line":30,"column":9,"nodeType":"201","messageId":"202","endLine":30,"endColumn":13},{"ruleId":"199","severity":1,"message":"221","line":80,"column":10,"nodeType":"201","messageId":"202","endLine":80,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":103,"column":6,"nodeType":"224","endLine":103,"endColumn":8,"suggestions":"225"},{"ruleId":"222","severity":1,"message":"223","line":132,"column":6,"nodeType":"224","endLine":132,"endColumn":8,"suggestions":"226"},{"ruleId":"199","severity":1,"message":"227","line":12,"column":8,"nodeType":"201","messageId":"202","endLine":12,"endColumn":16},{"ruleId":"199","severity":1,"message":"228","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"217","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":18},{"ruleId":"199","severity":1,"message":"229","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":12},{"ruleId":"199","severity":1,"message":"230","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":20},{"ruleId":"199","severity":1,"message":"231","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"229","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":12},{"ruleId":"199","severity":1,"message":"232","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":19},{"ruleId":"199","severity":1,"message":"233","line":8,"column":10,"nodeType":"201","messageId":"202","endLine":8,"endColumn":14},"no-unused-vars","'unathorised' is defined but never used.","Identifier","unusedVar","no-native-reassign",["234"],"no-negated-in-lhs",["235"],"'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'FavoriteIcon' is defined but never used.","'Avatar' is defined but never used.","'PlaylistAddCheckIcon' is defined but never used.","'HomeIcon' is defined but never used.","'theme' is assigned a value but never used.","'favIcon' is assigned a value but never used.","'actors' is assigned a value but never used.","'FilterCard' is defined but never used.","'handleChange' is assigned a value but never used.","'images' is assigned a value but never used.","'auth' is assigned a value but never used.","'authenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.userName'. Either include it or remove the dependency array.","ArrayExpression",["236"],["237"],"'MuiAlert' is defined but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'Movie' is defined but never used.","'authToken' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},"Update the dependencies array to be: [auth.userName]",{"range":"241","text":"242"},{"range":"243","text":"242"},[3675,3677],"[auth.userName]",[4590,4592]]