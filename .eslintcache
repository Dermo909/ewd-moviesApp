[{"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\index.js":"1","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\homePage.js":"2","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieList\\index.js":"3","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovieList\\index.js":"4","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\filterMoviesCard\\index.js":"5","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieCard\\index.js":"6","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieDetailsPage.js":"7","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovie\\index.js":"8","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieDetails\\index.js":"9","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\favoriteMoviesPage.js":"10","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMovieListPage\\index.js":"11","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\tmdb-api.js":"12","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMoviePage\\index.js":"13","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReviews\\index.js":"14","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\utils.js":"15","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieReviewPage.js":"16","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReview\\index.js":"17","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\hooks\\useMovie.js":"18","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\siteHeader\\index.js":"19","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\upcomingMoviesPage.js":"20","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\moviesContexts.js":"21","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\genresContexts.js":"22","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToFavorites.js":"23","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\writeReview.js":"24","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromFavorites.js":"25","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\addMovieReviewPage.js":"26","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\reviewForm\\index.js":"27","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToPlaylist.js":"28","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\watchlistMoviesPage.js":"29","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromWatchlist.js":"30","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\top100MoviesPage.js":"31","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\top100MovieList\\index.js":"32","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieOrderedList\\index.js":"33","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\login.js":"34","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\login\\index.js":"35","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\authContext.js":"36","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\movie-api.js":"37","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\SignUp\\index.js":"38","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\unathorised.js":"39","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\oops.js":"40"},{"size":2414,"mtime":1621435921234,"results":"41","hashOfConfig":"42"},{"size":842,"mtime":1621435921254,"results":"43","hashOfConfig":"42"},{"size":385,"mtime":1616082951409,"results":"44","hashOfConfig":"42"},{"size":1215,"mtime":1615620714828,"results":"45","hashOfConfig":"42"},{"size":3187,"mtime":1616309890083,"results":"46","hashOfConfig":"42"},{"size":3319,"mtime":1621435921156,"results":"47","hashOfConfig":"42"},{"size":1316,"mtime":1621435921267,"results":"48","hashOfConfig":"42"},{"size":2004,"mtime":1617825255023,"results":"49","hashOfConfig":"42"},{"size":8157,"mtime":1621435921163,"results":"50","hashOfConfig":"42"},{"size":1467,"mtime":1621455331428,"results":"51","hashOfConfig":"42"},{"size":1780,"mtime":1621435921193,"results":"52","hashOfConfig":"42"},{"size":6726,"mtime":1621435921113,"results":"53","hashOfConfig":"42"},{"size":1869,"mtime":1621435921201,"results":"54","hashOfConfig":"42"},{"size":2832,"mtime":1621439604308,"results":"55","hashOfConfig":"42"},{"size":781,"mtime":1621435921316,"results":"56","hashOfConfig":"42"},{"size":706,"mtime":1621435921274,"results":"57","hashOfConfig":"42"},{"size":209,"mtime":1615619703620,"results":"58","hashOfConfig":"42"},{"size":2634,"mtime":1621435921227,"results":"59","hashOfConfig":"42"},{"size":4285,"mtime":1621457252876,"results":"60","hashOfConfig":"42"},{"size":839,"mtime":1621435921301,"results":"61","hashOfConfig":"42"},{"size":6865,"mtime":1621454661516,"results":"62","hashOfConfig":"42"},{"size":667,"mtime":1616082158981,"results":"63","hashOfConfig":"42"},{"size":1154,"mtime":1621435921128,"results":"64","hashOfConfig":"42"},{"size":440,"mtime":1621435921142,"results":"65","hashOfConfig":"42"},{"size":1190,"mtime":1617824520621,"results":"66","hashOfConfig":"42"},{"size":1069,"mtime":1621435921241,"results":"67","hashOfConfig":"42"},{"size":5382,"mtime":1621435921180,"results":"68","hashOfConfig":"42"},{"size":1161,"mtime":1621435921135,"results":"69","hashOfConfig":"42"},{"size":1361,"mtime":1621455518008,"results":"70","hashOfConfig":"42"},{"size":1181,"mtime":1617824654753,"results":"71","hashOfConfig":"42"},{"size":882,"mtime":1621435921288,"results":"72","hashOfConfig":"42"},{"size":533,"mtime":1621435921208,"results":"73","hashOfConfig":"42"},{"size":392,"mtime":1621435921172,"results":"74","hashOfConfig":"42"},{"size":317,"mtime":1621435921261,"results":"75","hashOfConfig":"42"},{"size":3937,"mtime":1621435921148,"results":"76","hashOfConfig":"42"},{"size":1679,"mtime":1621435921214,"results":"77","hashOfConfig":"42"},{"size":4730,"mtime":1621436673567,"results":"78","hashOfConfig":"42"},{"size":3917,"mtime":1621435921120,"results":"79","hashOfConfig":"42"},{"size":310,"mtime":1621163249632,"results":"80","hashOfConfig":"42"},{"size":933,"mtime":1621435921281,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"6r8y7v",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"84"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"84"},"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\index.js",[],["183","184"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\homePage.js",["185"],"import React, { useContext } from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { MoviesContext } from \"../contexts/moviesContexts\";\r\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst HomePage = (props) => {\r\n  const context = useContext(MoviesContext);\r\n  const { movies  } = context;\r\n  const auth = useContext(AuthContext);\r\n  if (auth.isAuthenticated === false) {\r\n    props.history.push('/login');\r\n  }\r\n  console.log('homepage movies:', movies);\r\n  return (\r\n    <PageTemplate\r\n      title=\"Discover Movies\"\r\n      movies={movies}\r\n      action={(movie) => {\r\n        return <AddToFavoritesIcon movie={movie} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HomePage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieList\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovieList\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\filterMoviesCard\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieCard\\index.js",["186","187","188","189","190","191"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  card: { maxWidth: 250 },\r\n  media: { height: 400 },\r\n  avatar: {\r\n    backgroundColor: \"rgb(255, 0, 0)\",\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ movie, action }) {\r\n  const classes = useStyles();\r\n  console.log('movieCard');\r\n  return (\r\n\r\n    <Card className={classes.card}>\r\n      {/* <CardHeader\r\n        className={classes.header}\r\n        avatar={\r\n          movie.favorite ? (\r\n            <Avatar className={classes.avatar}>\r\n              <FavoriteIcon />\r\n            </Avatar>\r\n          ) : movie.playlist ? (\r\n            <Avatar className={classes.avatar}>\r\n              <PlaylistAddCheckIcon />\r\n            </Avatar>\r\n          ) : null\r\n        }\r\n        title={\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            {movie.title}{\" \"}\r\n          </Typography>\r\n        }\r\n      /> */}\r\n      <Link to={`/movies/${movie._id}`}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={\r\n          movie.poster_path !== 'null'\r\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      </Link>\r\n      <CardContent>\r\n        <Grid container>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"h6\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {movie.title}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h6\">\r\n              <Box fontWeight=\"fontWeightMedium\" fontSize={14}>\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {movie.release_date}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"h6\">\r\n            <Box fontWeight=\"fontWeightMedium\" fontSize={14}>\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {movie.vote_average}{\" \"}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* <CardActions disableSpacing>\r\n        {action(movie)}\r\n\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieDetailsPage.js",["192","193","194"],"import React, { useContext }from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MovieDetails from \"../components/movieDetails\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport useMovie from \"../hooks/useMovie\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst MovieDetailsPage = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  console.log('movieDetailsPage, id: ', id);\r\n  const [movie] = useMovie(id);\r\n  // const auth = useContext(AuthContext);\r\n  // if (auth.isAuthenticated === false) {\r\n  //   return <Redirect to={'/unathorised'} />;\r\n  // }\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <>\r\n          <PageTemplate movie={movie}>\r\n            <MovieDetails movie={movie} />\r\n          </PageTemplate>\r\n        </>\r\n      ) : (\r\n        <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n        style={{\r\n          position: 'absolute', left: '50%', top: '50%',\r\n          transform: 'translate(-50%, -50%)'\r\n      }}\r\n      />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieDetailsPage);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\headerMovie\\index.js",["195"],"import React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(1.5),\r\n    margin: 0,\r\n  },\r\n  // tagLine: {\r\n  //   fontSize: \"1.5rem\",\r\n  // },\r\n  movieDetails: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  movieHeader_Name: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: \"fontWeightBold\",\r\n  },\r\n  movieHeader_Year: {\r\n    fontSize: \"1.5rem\",\r\n    color: \"grey\"\r\n  },\r\n}));\r\n\r\nconst MovieHeader = ( { movie, history}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"div\" className={classes.root}>\r\n      <IconButton aria-label=\"go back\" onClick={() => history.goBack()} >\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        <span className={classes.movieHeader_Name}>{movie.title}</span> \r\n        <span className={classes.movieHeader_Year}>({movie.releaseYear})</span>\r\n        <br />\r\n        <span className={classes.movieDetails}>Rated {movie.certification} ○ {movie.release_date} ○ {movie.runtime} ○ {movie.productionCountry}</span>\r\n        {/*<a href={movie.homepage}></a>\r\n         <br />\r\n        <span className={classes.tagLine}>{`   \"${movie.tagline}\"`} </span> */}\r\n      </Typography>\r\n      <IconButton aria-label=\"go forward\" onClick={() => history.goForward() } >\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieHeader);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieDetails\\index.js",["196","197","198","199"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StarRate from \"@material-ui/icons/StarRate\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MovieReviews from \"../movieReviews\"\r\nimport Box from '@material-ui/core/Box';\r\nimport { excerpt } from \"../../../src/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport AddToFavoritesIcon from '../cardIcons/addToFavorites';\r\nimport AddToPlaylistIcon from '../cardIcons/addToPlaylist';\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport WriteReview from \"../cardIcons/writeReview\";\r\n\r\nconst theme = {\r\n  spacing: 8,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    //justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(1.5),\r\n    margin: 0,\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  genreList: {\r\n    display: \"inline\"\r\n  },\r\n  tagline: {\r\n    fontStyle: \"oblique\"\r\n  },\r\n  crewTitle: {\r\n    fontWeight: \"fontWeightBold\",\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\"\r\n  },\r\n  crewName: {\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\",\r\n    color: \"grey\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    maxWidth: \"100%\"\r\n  },\r\n  actorDetails: {\r\n    flexBasis: \"33%\",\r\n    maxWidth: \"33%\",\r\n\r\n    margin: \"10px\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  actorName: {\r\n    fontWeight: \"fontWeightBold\",\r\n  },\r\n  characterName: {\r\n    fontSize: \".75rem\",\r\n    color: \"grey\",\r\n  },\r\n  imgSize: {\r\n    height: \"75px\",\r\n    borderRadius: \"16px\"\r\n  },\r\n  reviewAuthor: {\r\n    fontWeight: \"fontWeightBold\"\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n    height: \"250px\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\nfunction ShowFavoriteIcon(props) {\r\n  console.log('props: ', props);\r\n  const isFavorite = props.favourite;\r\n\r\n  if (isFavorite) {\r\n    console.log('Is favorite');\r\n    return <FavoriteIcon />;\r\n  } else {\r\n    console.log('Is not favorite');\r\n    return <AddToFavoritesIcon movie={props}/>;\r\n  }\r\n}\r\n\r\n\r\nconst MovieDetails = ({ movie, action }) => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  console.log('movie details: ', movie);\r\n  const toggleDrawer = (open) => {\r\n    return () => setDrawerOpen(open);\r\n  };\r\n\r\n  const favIcon = ShowFavoriteIcon(movie);\r\n\r\n  // Just show actors with images\r\n  const actors = movie.castAndCrew.sortedActors.filter(x => x.file_path !== undefined);\r\n\r\n  const handleGenreClick = () => {\r\n    console.info('You clicked the Chip.');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n      <Typography variant=\"h6\" component=\"span\">\r\n          {(() => {\r\n            if (movie.userRating !== null) {\r\n              return <Chip icon={<StarRate />} label={`${movie.userRating}`}     style={{\r\n\r\n                backgroundColor: \"#32a852\"\r\n\r\n            }}/>;\r\n            } else {\r\n              return <Chip icon={<StarRate />} label={`${movie.vote_average}`} />;\r\n            }\r\n          })()}\r\n        \r\n        {movie.genres.map((g) => (\r\n          <Chip key={g.id} label={g.name} className={classes.chip} onClick={handleGenreClick}/>\r\n        ))}\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          {/* {favIcon } */}\r\n          <AddToFavoritesIcon movie={movie}/>\r\n          <AddToPlaylistIcon movie={movie}/>\r\n          <Box>\r\n            {(() => {\r\n              if (movie.userRating === null) {\r\n                return <WriteReview movie={movie} />;\r\n              }\r\n            })()}\r\n          </Box>\r\n          \r\n        </Box>\r\n        <br />\r\n        <Box className={classes.tagline}>\r\n          {movie.tagline}\r\n        </Box>\r\n        <br />\r\n        <Box>\r\n          {movie.overview}\r\n        </Box>\r\n        <br />\r\n\r\n        <Box className={classes.container}>\r\n          <Box className={classes.crewTitle}>Director<br /><span className={classes.crewName}>{movie.castAndCrew.director.name}</span></Box>\r\n          <Box className={classes.crewTitle}>Producer <br /><span className={classes.crewName}>{movie.castAndCrew.producer.name}</span></Box>\r\n          <Box className={classes.crewTitle}>Writer <br /><span className={classes.crewName}>{movie.castAndCrew.writer.name}</span></Box>\r\n        </Box>\r\n       </Typography>\r\n       </Box>\r\n        <br />\r\n        <Box className={classes.container}>\r\n        <br />\r\n        <GridList className={classes.gridList} cols={9}>\r\n        {movie.castAndCrew.sortedActors.map((actor) => (\r\n          <GridListTile key={actor.original_name}>\r\n            <a href={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}>\r\n            <img src={`https://image.tmdb.org/t/p/w154/${actor.profile_path}`} alt={actor.profile_path} />\r\n            </a>\r\n            <GridListTileBar\r\n              title={actor.original_name}\r\n              classes={{\r\n                root: classes.titleBar,\r\n              }}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n\r\n        {/* {movie.castAndCrew.sortedActors.map((a) => ( \r\n          <Paper key={a.original_name} className={classes.actorDetails}>\r\n            <img classes={classes.imgSize} src={`https://image.tmdb.org/t/p/w92/${a.profile_path}`} alt={a.profile_path} />\r\n            <br />\r\n            <span classes={classes.actorName}>{a.original_name}</span><br />\r\n            <span classes={classes.characterName}>{a.character}</span>\r\n          </Paper>))} */}\r\n        </Box>\r\n      <Box>\r\n        <Paper>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <Box display=\"flex\" flexDirection=\"column\" m={2}>\r\n              <img src={movie.topReview.author_details.avatar_path} alt={movie.topReview.author_details.avatar_path} />\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"column\" m={2}>\r\n                <Box component=\"span\" m={1} display=\"block\" classes={classes.reviewAuthor}>A review by {movie.topReview.author}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\" classes={classes.reviewAuthor}>Review written {movie.topReview.created_at}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">{excerpt(movie.topReview.content)}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">{movie.topReview.rating}</Box>\r\n                <Box component=\"span\" m={1} display=\"block\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/reviews/${movie.topReview.id}`,\r\n                      state: {\r\n                        review: movie.topReview,\r\n                        movie: movie,\r\n                      },\r\n                    }}\r\n                    >\r\n                    Full Review\r\n                  </Link>\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box>\r\n      <Fab\r\n        color=\"secondary\"\r\n        variant=\"extended\"\r\n        onClick={toggleDrawer(true)}\r\n        className={classes.fab}\r\n      >\r\n        <NavigationIcon />\r\n        All Reviews\r\n      </Fab>\r\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={toggleDrawer(false)}>\r\n        <MovieReviews movie={movie} />\r\n      </Drawer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default  MovieDetails ;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\favoriteMoviesPage.js",["200"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { MoviesContext } from \"../contexts/moviesContexts\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\r\nimport WriteReview from \"../components/cardIcons/writeReview\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserFavourites } from './../api/movie-api';\r\n\r\nconst FavoriteMoviesPage = (props) => {\r\n  const context = useContext(MoviesContext);\r\n  const auth = useContext(AuthContext);\r\n  const [favouriteMovies, setFavouriteMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserFavourites(auth.userName).then((r) => {\r\n      setFavouriteMovies(r);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (auth.isAuthenticated === false) {\r\n    return <Redirect to={'/unathorised'} />;\r\n  }\r\n\r\n  const renderPage = () => {\r\n      return (\r\n        <PageTemplate\r\n          title=\"Favourite Movies\"\r\n          movies={favouriteMovies}\r\n          action={(movie) => {\r\n            return (\r\n              <>\r\n                <RemoveFromFavorites movie={movie} />\r\n                <WriteReview movie={movie} />\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      );\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderPage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteMoviesPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMovieListPage\\index.js",["201","202"],"import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieList from \"../movieList\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n  },\r\n});\r\n\r\nfunction MovieListPageTemplate({ movies, title, action }) {\r\n  const classes = useStyles();\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const genre = Number(genreFilter);\r\n\r\n  console.log('templatemovielistpage: movies', movies);\r\n  let displayedMovies = movies\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\r\n    });\r\n    console.log('displayedMovies in template movie list page: ', displayedMovies);\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n      <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        {/* <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n          />\r\n        </Grid> */}\r\n        {/* <MovieList selectFavorite={selectFavorite} movies={displayedMovies}></MovieList> */}\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default MovieListPageTemplate;\r\n","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\tmdb-api.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\templateMoviePage\\index.js",["203"],"import React, { useState, useEffect } from \"react\";\r\nimport MovieHeader from \"../headerMovie\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport { getMovieImages } from \"../../api/tmdb-api\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  gridList: {\r\n    width: 450,\r\n    height: '100vh',\r\n  },\r\n}));\r\n\r\nconst TemplateMoviePage = ({ movie, children }) => {\r\n  const classes = useStyles();\r\n  const [images, setImages] = useState([]);\r\n  useEffect(() => {\r\n    getMovieImages(movie.id).then((images) => {\r\n      movie.mainPoster = images.length !== 0 ? images[0].file_path : movie.backdrop_path;\r\n      console.log(images);\r\n      setImages(images);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MovieHeader movie={movie} />\r\n\r\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\r\n        <Grid item xs={3}>\r\n          <div className={classes.root}>\r\n            <GridList cellHeight={900} className={classes.gridList} cols={1}>\r\n                <GridListTile key={movie.mainPoster} className={classes.gridListTile} cols={1}>\r\n                  <Box>\r\n                  <img \r\n                    src={`https://image.tmdb.org/t/p/w500/${movie.mainPoster}`}\r\n                    alt={movie.mainPoster}\r\n                  />\r\n                  </Box>\r\n                </GridListTile>\r\n            </GridList>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateMoviePage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReviews\\index.js",["204","205"],"import React, { useEffect, useState }  from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/movie-api\";\r\nimport { excerpt } from \"../../../src/utils\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 550,\r\n  },\r\n});\r\n\r\nexport default function MovieReviews({ movie }) {\r\n  const classes = useStyles();\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movie._id).then((r) => {\r\n      // Did the user review this?\r\n      // const userReview = localStorage.getItem(`Review${movie.id}`);\r\n      // const userName = localStorage.getItem('UserName');\r\n      if(r !== null) {\r\n        console.log('user review is not null: ', r);\r\n        for(let rev in r){\r\n          console.log('in loop r: ', r);\r\n          // const review = {\r\n          //   author: r[rev].author,\r\n          //   content: r[rev].content\r\n          // };\r\n          // reviews.push(review);\r\n        }\r\n\r\n        // console.log('getMovieReviews reviews: ', r);\r\n        // //reviews.push(review);\r\n        // console.log('reviews list: ', r);\r\n        \r\n        console.log('reviews: ', reviews);\r\n      }\r\n\r\n      setReviews(r);\r\n      \r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"reviews table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell >Author</TableCell>\r\n            <TableCell align=\"center\">Excerpt</TableCell>\r\n            <TableCell align=\"right\">More</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {reviews.map((r) => (\r\n            <TableRow key={r._id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {r.author}\r\n              </TableCell>\r\n              <TableCell >{excerpt(r.content)}</TableCell>\r\n              <TableCell >\r\n                {/* <Link\r\n                  to={{\r\n                    pathname: `/reviews/${r.id}`,\r\n                    state: {\r\n                      review: r,\r\n                      movie: movie,\r\n                    },\r\n                  }}\r\n                >\r\n                  Full Review\r\n                </Link> */}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\utils.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\movieReviewPage.js",["206","207","208"],"import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport MovieReview from \"../components/movieReview\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst MovieReviewPage = ({\r\n  location: {\r\n    state: { movie, review },\r\n  },\r\n}) => {\r\n  // const auth = useContext(AuthContext);\r\n  // if (auth.isAuthenticated === false) {\r\n  //   return <Redirect to={'/unathorised'} />;\r\n  // }\r\n  return (\r\n    <PageTemplate movie={movie}>\r\n      <MovieReview review={review} />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieReviewPage);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieReview\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\hooks\\useMovie.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\siteHeader\\index.js",["209"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\upcomingMoviesPage.js",["210","211"],"import React, { useContext } from \"react\";\r\nimport PageTemplate from '../components/templateMovieListPage'\r\nimport { MoviesContext } from \"../contexts/moviesContexts\";\r\nimport AddToPlaylistIcon from '../components/cardIcons/addToPlaylist';\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst UpcomingMoviesPage = (props) => {\r\n  const context = useContext(MoviesContext);\r\n  const { upcoming } = context;\r\n  // const auth = useContext(AuthContext);\r\n  // if (auth.isAuthenticated === false) {\r\n  //   return <Redirect to={'/unathorised'} />;\r\n  // }\r\n  return (\r\n    <PageTemplate\r\n      title=\"Upcoming Movies\"\r\n      movies={upcoming}\r\n      action={(movie) => {\r\n        return <AddToPlaylistIcon movie={movie} />\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default UpcomingMoviesPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\moviesContexts.js",["212"],"import React, { useReducer, useEffect, useState, useContext } from \"react\";\r\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\r\nimport {  getMovies,\r\n          addMovieToFavourites,\r\n          addMovieToWatchlist,\r\n          getUserFavourites,\r\n          getUserWatchlist,\r\n          addMovieReview } from \"../api/movie-api\";\r\nimport { convertReleaseDateToString, convertToPercentage } from '../utils';\r\nimport { AuthContext } from './authContext';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"load-favourite-movies\":\r\n      return {\r\n        favouriteMovies: action.payload.favouritesResult,\r\n        upcoming: [...state.upcoming],\r\n        movies: [...state.movies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"remove-favorite\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, favorite: false } : m\r\n        ),\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-watchlist-movies\":\r\n      return {\r\n        watchlistMovies: action.payload.watchlistResult.map(m => { m.watchlist = true; return m;}),\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        upcoming: [...state.upcoming],\r\n        movies: [...state.movies],\r\n      };\r\n    case \"remove-from-playlist\":\r\n      return {\r\n        upcoming: state.upcoming.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, playlist: false } : m\r\n        ),\r\n        favouriteMovies: action.payload.favouritesResult,\r\n        movies: [...state.movies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-discover-movies\":\r\n      console.log('case load-discover-movies ', action.payload);\r\n      return {\r\n        movies: action.payload.movies,\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"load-upcoming-movies\":\r\n      return {\r\n        upcoming: action.payload.movies,\r\n        movies: [...state.movies],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    case \"add-review\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id\r\n            ? { ...m, review: action.payload.review }\r\n            : m\r\n        ),\r\n        upcoming: [...state.upcoming],\r\n        favouriteMovies: [...state.favouriteMovies],\r\n        watchlistMovies: [...state.watchlistMovies],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const MoviesContext = React.createContext(null);\r\n\r\nconst MoviesContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], upcoming: [], favouriteMovies: [], watchlistMovies: [] });\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  console.log('auth: ', auth);\r\n  \r\n  const addToFavorites = (movieId) => {\r\n    console.log('Add to favorite: ', movieId);\r\n\r\n    async function addToFavourites() {\r\n      const result = await addMovieToFavourites(auth.userName, movieId);\r\n      console.log('addToFavourites result: ', result);\r\n    }\r\n    addToFavourites();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getFavourites() {\r\n      const favouritesResult = await getUserFavourites(auth.userName);\r\n      console.log('useEffect getUserFavourites result: ', favouritesResult);\r\n\r\n      dispatch({ type: \"load-favourite-movies\", payload: { favouritesResult } });\r\n    }\r\n    getFavourites();\r\n  }, [auth.userName]);\r\n\r\n  useEffect(() => {\r\n    async function getWatchlist() {\r\n      const watchlistResult = await getUserWatchlist(auth.userName);\r\n      console.log('useEffect getUserWatchlist result: ', watchlistResult);\r\n\r\n      dispatch({ type: \"load-watchlist-movies\", payload: { watchlistResult } });\r\n    }\r\n    getWatchlist();\r\n  }, [auth.userName]);\r\n\r\n  const addToPlaylist = (movieId) => {\r\n    console.log('Add to watchlist: ', movieId);\r\n\r\n    async function addToWatchlist() {\r\n      const result = await addMovieToWatchlist(auth.userName, movieId);\r\n      console.log('addToFavourites result: ', result);\r\n    }\r\n    addToWatchlist();\r\n  };\r\n\r\n  const removeFromPlaylist = (movieId) => {\r\n    const index = state.upcoming.map((m) => m.id).indexOf(movieId);\r\n    console.log('removeFromPlaylist() index', index);\r\n    dispatch({\r\n      type: \"remove-from-playlist\",\r\n      payload: { movie: state.upcoming[index] },\r\n    });\r\n  };\r\n\r\n  const removeFromFavorites = (movieId) => {\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({\r\n      type: \"remove-favorite\",\r\n      payload: { movie: state.movies[index] },\r\n    });\r\n  };\r\n\r\n\r\n  const addReview = (movie, review) => {\r\n    console.log('Adding review: ', review);\r\n\r\n    async function addReview() {\r\n      const result = await addMovieReview(auth.userName, review);\r\n      console.log('addMovieMovieReview result: ', result);\r\n    }\r\n    addReview();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      const moviesResult = await getMovies();\r\n      console.log('useEffect getMovies result: ', moviesResult);\r\n\r\n      moviesResult.results.forEach(x => {\r\n        x.vote_average = convertToPercentage(x.vote_average);\r\n        x.release_date = convertReleaseDateToString(x.release_date);\r\n      });\r\n\r\n      const movies = moviesResult.results;\r\n      dispatch({ type: \"load-discover-movies\", payload: { movies } });\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMovies().then((movies) => {\r\n      console.log('useEffect getUpcomingMovies result: ', movies);\r\n      dispatch({ type: \"load-upcoming-movies\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getFavouriteMovies = async () => {\r\n    const favouritesResult = await getUserFavourites(auth.userName);\r\n    console.log('getUserFavourites result: ', favouritesResult);\r\n\r\n    dispatch({ type: \"load-favourite-movies\", payload: { favouritesResult } });\r\n  }\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        upcoming: state.upcoming,\r\n        favouriteMovies: state.favouriteMovies,\r\n        watchlistMovies: state.watchlistMovies,\r\n        addToFavorites: addToFavorites,\r\n        removeFromFavorites: removeFromFavorites,\r\n        addReview: addReview,\r\n        addToPlaylist: addToPlaylist,\r\n        removeFromPlaylist: removeFromPlaylist,\r\n        getFavouriteMovies: getFavouriteMovies,\r\n        setAuthenticated\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\genresContexts.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToFavorites.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\writeReview.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromFavorites.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\addMovieReviewPage.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\reviewForm\\index.js",["213","214"],"import React, { useContext, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useForm from \"react-hook-form\";\r\nimport { MoviesContext } from \"../../contexts/moviesContexts\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\"; \r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { convertUserRatingToPercentage } from '../../utils';\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    \"& > * \": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  textField: {\r\n    width: \"40ch\",\r\n  },\r\n  submit: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  snack: {\r\n     width: \"50%\",\r\n     \"& > * \": {\r\n       width: \"100%\",\r\n     },\r\n   },\r\n}));\r\n\r\nconst ReviewForm = ({ movie, history }) => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const context = useContext(MoviesContext);\r\n  const [rating, setRating] = useState(3);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const userName = localStorage.getItem('userName');\r\n  console.log('review form');\r\n\r\n  const renderPage = () => {\r\n      return (\r\n        <Box component=\"div\" className={classes.root}>\r\n          <Typography component=\"h2\" variant=\"h3\">\r\n            Write a review\r\n          </Typography>\r\n    \r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleSnackClose}>\r\n            <Alert onClose={handleSnackClose} severity=\"success\">\r\n            Thank you for submitting a review!\r\n            </Alert>\r\n          </Snackbar>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            noValidate\r\n          >\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              id=\"author\"\r\n              label=\"Author's name\"\r\n              name=\"author\"\r\n              autoFocus\r\n              inputRef={register({ required: \"Author name required\" })}\r\n              value={userName}\r\n            />\r\n            {errors.author && (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {errors.author.message}\r\n              </Typography>\r\n            )}\r\n    \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"content\"\r\n              label=\"Review text\"\r\n              id=\"content\"\r\n              multiline\r\n              rows={10}\r\n              inputRef={register({\r\n                required: \"No review text\",\r\n                minLength: { value: 10, message: \"Review is too short\" },\r\n              })}\r\n            />\r\n            {errors.content && (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {errors.content.message}\r\n              </Typography>\r\n            )}\r\n            <TextField\r\n              id=\"select-rating\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Rating Select\"\r\n              value={rating}\r\n              onChange={handleRatingChange}\r\n              helperText=\"Don't forget your rating\"\r\n            >\r\n              {ratings.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n    \r\n            <Box className={classes.buttons}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"reset\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                onClick={() => {\r\n                  reset({\r\n                    author: \"\",\r\n                    content: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      );\r\n  }\r\n  const handleSnackClose = (event) => {\r\n    setOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie._id;\r\n    review.rating = rating;\r\n    context.addReview(movie, review);\r\n    setOpen(true);   // NEW\r\n  };\r\n  return (\r\n    <div>\r\n      {renderPage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ReviewForm);","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\addToPlaylist.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\watchlistMoviesPage.js",["215"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { MoviesContext } from \"../contexts/moviesContexts\";\r\nimport RemoveFromWatchlist from \"../components/cardIcons/removeFromWatchlist\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserWatchlist } from './../api/movie-api';\r\n\r\nconst WatchlistMoviesPage = (props) => {\r\n  const context = useContext(MoviesContext);\r\n  const auth = useContext(AuthContext);\r\n  const unathorised = '/unathorised';\r\n  const [watchlistMovies, setWatchlistMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserWatchlist(auth.userName).then((r) => {\r\n      setWatchlistMovies(r);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  if (auth.isAuthenticated === false) {\r\n    return <Redirect to={unathorised} />;\r\n  }\r\n  \r\n  const renderPage = () => {\r\n\r\n    return (\r\n      <PageTemplate\r\n        title=\"Watchlist\"\r\n        movies={watchlistMovies}\r\n        action={(movie) => {\r\n          return (\r\n            <>\r\n              <RemoveFromWatchlist movie={movie} />\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {renderPage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchlistMoviesPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\cardIcons\\removeFromWatchlist.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\top100MoviesPage.js",["216","217"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport PageTemplate from \"../components/top100MovieList\";\r\nimport { getTop100Movies } from \"../api/tmdb-api\"\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Top100MoviesPage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        // if (auth.isAuthenticated === false) {\r\n        //     return <Redirect to={'/unathorised'} />;\r\n        //   }\r\n        getTop100Movies().then(movies => {\r\n            setMovies(movies);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <PageTemplate\r\n            title=\"Top Rated Movies\"\r\n            movies={movies}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Top100MoviesPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\top100MovieList\\index.js",["218","219","220","221"],"import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieList from \"../movieOrderedList\";\r\n\r\nfunction Top100MoviesPageTemplate({ movies, title }) {\r\n  return (\r\n    <div>\r\n        <Header title={title} />\r\n        <ol>\r\n        <MovieList movies={movies}></MovieList>\r\n        </ol>\r\n    </div>\r\n  );\r\n}\r\nexport default Top100MoviesPageTemplate;\r\n","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\movieOrderedList\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\login.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\login\\index.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\contexts\\authContext.js",["222","223"],"import { NetworkLockedTwoTone } from \"@material-ui/icons\";\r\nimport React, { useState, createContext } from \"react\";\r\nimport { login, signup } from \"../api/movie-api\";\r\nimport { OK, NOTOK } from '../utils';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const existingToken = localStorage.getItem(\"token\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authToken, setAuthToken] = useState(existingToken);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  //Function to put JWT token in local storage.\r\n  const setToken = (data) => {\r\n    localStorage.setItem(\"token\", data);\r\n    setAuthToken(data);\r\n  }\r\n\r\n  const authenticate = async (username, password) => {\r\n    const result = await login(username, password);\r\n    if (result.token) {\r\n      setToken(result.token)\r\n      setIsAuthenticated(true);\r\n      setUserName(username);\r\n      localStorage.setItem('userName', username);\r\n      return OK;\r\n    } else {\r\n      return NOTOK;\r\n    }\r\n  };\r\n\r\n  const register = async (username, password) => {\r\n    const result = await signup(username, password);\r\n    console.log(result.code);\r\n    return (result.code === 201) ? true : false;\r\n  };\r\n\r\n  const signout = () => {\r\n    localStorage.removeItem('userName');\r\n    localStorage.removeItem('token');\r\n    setTimeout(() => setIsAuthenticated(false), 100);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        authenticate,\r\n        register,\r\n        signout,\r\n        userName\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\api\\movie-api.js",[],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\components\\SignUp\\index.js",["224"],"import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from './../../contexts/authContext';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useForm from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        \"& > * \": {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    textField: {\r\n        width: \"40ch\",\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    snack: {\r\n        width: \"50%\",\r\n        \"& > * \": {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst SignUpPage = props => {\r\n  const context = useContext(AuthContext)\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\r\n  const [registered, setRegistered] = useState(false);\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = () => {\r\n    if (password.length > 0 && password === passwordAgain) {\r\n        console.log('Calling register');\r\n      context.register(userName, password);\r\n      setRegistered(true);\r\n    }\r\n  }\r\n\r\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\r\n\r\n  if (registered === true) {\r\n    return <Redirect to={from} />;\r\n  }\r\n\r\n  return (\r\n    <Box component=\"div\" className={classes.root}>\r\n    <Typography component=\"h2\" variant=\"h3\">\r\n      Please enter your details\r\n    </Typography>\r\n\r\n    <form\r\n      className={classes.root}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      noValidate\r\n    >\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"user name\"\r\n        name=\"name\"\r\n        autoFocus\r\n        inputRef={register({ required: \"User name required\" })}\r\n        onBlur={e => {setUserName(e.target.value)}}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        autoFocus\r\n        inputRef={register({ required: \"Password required\" })}\r\n        onBlur={e => {setPassword(e.target.value)}}\r\n      />\r\n      <TextField\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        id=\"name\"\r\n        label=\"password\"\r\n        name=\"passwordAgain\"\r\n        type=\"password\"\r\n        autoFocus\r\n        inputRef={register({ required: \"Confirm password required\" })}\r\n        onBlur={e => {setPasswordAgain(e.target.value)}}\r\n      />\r\n      {errors.name && (\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          {errors.name.message}\r\n        </Typography>\r\n      )}\r\n      <Box className={classes.buttons}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          type=\"reset\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.submit}\r\n          onClick={() => {\r\n            reset({\r\n              userName: \"\", password: \"\"\r\n            });\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;","C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\unathorised.js",[],["225","226"],"C:\\Users\\dgrace\\Documents\\College\\Enterprise web development\\Week 5\\moviesApp\\src\\pages\\oops.js",["227","228","229","230"],"import React, { useContext, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nconst Oops = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box component=\"div\" className={classes.root}>\r\n        <Typography component=\"h2\" variant=\"h3\">\r\n          Oops, something went wrong\r\n        </Typography>\r\n        <p>\r\n            <Link to=\"/login\">Please sign in again</Link>\r\n          </p>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Oops;",{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"239","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":19},{"ruleId":"235","severity":1,"message":"240","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":18},{"ruleId":"235","severity":1,"message":"241","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":14},{"ruleId":"235","severity":1,"message":"242","line":11,"column":8,"nodeType":"237","messageId":"238","endLine":11,"endColumn":20},{"ruleId":"235","severity":1,"message":"243","line":16,"column":8,"nodeType":"237","messageId":"238","endLine":16,"endColumn":14},{"ruleId":"235","severity":1,"message":"244","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":28},{"ruleId":"235","severity":1,"message":"245","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":27},{"ruleId":"235","severity":1,"message":"246","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":18},{"ruleId":"235","severity":1,"message":"247","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":16},{"ruleId":"235","severity":1,"message":"243","line":21,"column":8,"nodeType":"237","messageId":"238","endLine":21,"endColumn":14},{"ruleId":"235","severity":1,"message":"248","line":24,"column":7,"nodeType":"237","messageId":"238","endLine":24,"endColumn":12},{"ruleId":"235","severity":1,"message":"249","line":123,"column":9,"nodeType":"237","messageId":"238","endLine":123,"endColumn":16},{"ruleId":"235","severity":1,"message":"250","line":126,"column":9,"nodeType":"237","messageId":"238","endLine":126,"endColumn":15},{"ruleId":"235","severity":1,"message":"251","line":11,"column":9,"nodeType":"237","messageId":"238","endLine":11,"endColumn":16},{"ruleId":"235","severity":1,"message":"252","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"253","line":29,"column":9,"nodeType":"237","messageId":"238","endLine":29,"endColumn":21},{"ruleId":"235","severity":1,"message":"254","line":24,"column":10,"nodeType":"237","messageId":"238","endLine":24,"endColumn":16},{"ruleId":"235","severity":1,"message":"255","line":10,"column":10,"nodeType":"237","messageId":"238","endLine":10,"endColumn":14},{"ruleId":"235","severity":1,"message":"256","line":31,"column":17,"nodeType":"237","messageId":"238","endLine":31,"endColumn":20},{"ruleId":"235","severity":1,"message":"245","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":27},{"ruleId":"235","severity":1,"message":"246","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"257","line":32,"column":9,"nodeType":"237","messageId":"238","endLine":32,"endColumn":20},{"ruleId":"235","severity":1,"message":"246","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"258","line":81,"column":10,"nodeType":"237","messageId":"238","endLine":81,"endColumn":23},{"ruleId":"235","severity":1,"message":"259","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":16},{"ruleId":"235","severity":1,"message":"260","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":39},{"ruleId":"235","severity":1,"message":"251","line":10,"column":9,"nodeType":"237","messageId":"238","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":18},{"ruleId":"235","severity":1,"message":"261","line":9,"column":11,"nodeType":"237","messageId":"238","endLine":9,"endColumn":15},{"ruleId":"235","severity":1,"message":"262","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"252","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"263","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":12},{"ruleId":"235","severity":1,"message":"264","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":20},{"ruleId":"235","severity":1,"message":"265","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":30},{"ruleId":"235","severity":1,"message":"266","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":19},{"ruleId":"235","severity":1,"message":"255","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":14},{"ruleId":"231","replacedBy":"267"},{"ruleId":"233","replacedBy":"268"},{"ruleId":"235","severity":1,"message":"245","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":27},{"ruleId":"235","severity":1,"message":"262","line":1,"column":29,"nodeType":"237","messageId":"238","endLine":1,"endColumn":37},{"ruleId":"235","severity":1,"message":"241","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"269","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":17},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'FavoriteIcon' is defined but never used.","'Avatar' is defined but never used.","'PlaylistAddCheckIcon' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'HomeIcon' is defined but never used.","'theme' is assigned a value but never used.","'favIcon' is assigned a value but never used.","'actors' is assigned a value but never used.","'context' is assigned a value but never used.","'FilterCard' is defined but never used.","'handleChange' is assigned a value but never used.","'images' is assigned a value but never used.","'Link' is defined but never used.","'rev' is assigned a value but never used.","'signOutText' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'MuiAlert' is defined but never used.","'convertUserRatingToPercentage' is defined but never used.","'auth' is assigned a value but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'NetworkLockedTwoTone' is defined but never used.","'authToken' is assigned a value but never used.",["270"],["271"],"'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]